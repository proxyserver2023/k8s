{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "minikube",
                "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                "resourceVersion": "232518",
                "creationTimestamp": "2023-11-29T23:32:44Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "minikube",
                    "kubernetes.io/os": "linux",
                    "minikube.k8s.io/commit": "8220a6eb95f0a4d75f7f2d7b14cef975f050512d",
                    "minikube.k8s.io/name": "minikube",
                    "minikube.k8s.io/primary": "true",
                    "minikube.k8s.io/updated_at": "2023_11_30T05_32_47_0700",
                    "minikube.k8s.io/version": "v1.32.0",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///var/run/cri-dockerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "6",
                    "ephemeral-storage": "122713108Ki",
                    "hugepages-2Mi": "0",
                    "memory": "8138740Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "6",
                    "ephemeral-storage": "122713108Ki",
                    "hugepages-2Mi": "0",
                    "memory": "8138740Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-20T02:39:48Z",
                        "lastTransitionTime": "2023-11-29T23:32:42Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-20T02:39:48Z",
                        "lastTransitionTime": "2023-11-29T23:32:42Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-12-20T02:39:48Z",
                        "lastTransitionTime": "2023-11-29T23:32:42Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-12-20T02:39:48Z",
                        "lastTransitionTime": "2023-12-08T02:20:41Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.49.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "minikube"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "7bba5e42bc814586aa55a5386892bf00",
                    "systemUUID": "7bba5e42bc814586aa55a5386892bf00",
                    "bootID": "97f95b3a-7460-47bd-ba65-6bc9b8eedf05",
                    "kernelVersion": "6.4.16-linuxkit",
                    "osImage": "Ubuntu 22.04.3 LTS",
                    "containerRuntimeVersion": "docker://24.0.7",
                    "kubeletVersion": "v1.28.3",
                    "kubeProxyVersion": "v1.28.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 1507685556
                    },
                    {
                        "names": [
                            "docker.elastic.co/elasticsearch/elasticsearch@sha256:8a84691acd5464776414917e86b6ceb1c8aa38910c20685373aeaab272104619",
                            "docker.elastic.co/elasticsearch/elasticsearch:8.3.2"
                        ],
                        "sizeBytes": 1239376103
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 1200449884
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 1190955295
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 1190313549
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 1160308429
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/dotnet/sdk@sha256:239eb99884b49bac13f4ff5935e118654f87b67d6e31bc842c7cd5a6c46fcc4f"
                        ],
                        "sizeBytes": 835646516
                    },
                    {
                        "names": [
                            "docker.elastic.co/kibana/kibana@sha256:34cd9469019f851489aa405211f3f2b3a07092c4aa67fd87e438c45601d6b412",
                            "docker.elastic.co/kibana/kibana:8.3.2"
                        ],
                        "sizeBytes": 780185314
                    },
                    {
                        "names": [
                            "docker.elastic.co/logstash/logstash@sha256:32b879859f190a422dd2d55ae63d8dad2c005aa2d5f5f9c351f3c22770649942",
                            "docker.elastic.co/logstash/logstash:8.3.2"
                        ],
                        "sizeBytes": 753462952
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 671983280
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 636116277
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 627950113
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 524793433
                    },
                    {
                        "names": [
                            "\u003cnone\u003e@\u003cnone\u003e",
                            "\u003cnone\u003e:\u003cnone\u003e"
                        ],
                        "sizeBytes": 522594618
                    },
                    {
                        "names": [
                            "docker.elastic.co/beats/metricbeat@sha256:57c309a1632f02a1de3c2c3cc733a35c24fba8b39449eab0c446bf384cb1b32d",
                            "docker.elastic.co/beats/metricbeat:8.3.2"
                        ],
                        "sizeBytes": 459517425
                    },
                    {
                        "names": [
                            "eclipse-temurin@sha256:9d007c093e624bc410f113ee09f5209d3263e0bada7524e4de99eac9fbef06a5"
                        ],
                        "sizeBytes": 434631182
                    },
                    {
                        "names": [
                            "docker.elastic.co/beats/filebeat@sha256:81cb3920f53f58895cf61dfb7a68259826e22c3c0edb5f65897c1c8c41ebc766",
                            "docker.elastic.co/beats/filebeat:8.3.2"
                        ],
                        "sizeBytes": 383629416
                    },
                    {
                        "names": [
                            "influxdb@sha256:02d64a7a0219c4d2f898c17bb296f2e2af93263bc7c8ad52e0387700d362df7f",
                            "influxdb:latest"
                        ],
                        "sizeBytes": 369463416
                    },
                    {
                        "names": [
                            "registry.k8s.io/etcd@sha256:e013d0d5e4e25d00c61a7ff839927a1f36479678f11e49502b53a5e0b14f10c3",
                            "registry.k8s.io/etcd:3.5.9-0"
                        ],
                        "sizeBytes": 294018614
                    },
                    {
                        "names": [
                            "currencyservice:a63a25d7f44bf8b07d53f894ef05bb6e8f3ba1e65daa83e8ea24bdd7b7d6b0b6",
                            "currencyservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 293806408
                    },
                    {
                        "names": [
                            "emailservice:05710fd52bc89cc1ce8a9e2cdd9a3c3930f558301eeaf4331b3af310a08382d8",
                            "emailservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 292984296
                    },
                    {
                        "names": [
                            "recommendationservice:ad30bab871add5e2b633a8d53ebc874d89924f398d0f77e86b598424037b5d8c",
                            "recommendationservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 291209024
                    },
                    {
                        "names": [
                            "paymentservice:6b0fd67d01baaf3a153ad22bcdce191e09c965df796cb8e6715aa365500f4909",
                            "paymentservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 287004597
                    },
                    {
                        "names": [
                            "adservice:4d66ed893a40f14148a2bed90a093a520cabd429bc7dee09a060b77300a18d59",
                            "adservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 248549126
                    },
                    {
                        "names": [
                            "kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93"
                        ],
                        "sizeBytes": 245710051
                    },
                    {
                        "names": [
                            "golang@sha256:926f7f7e1ab8509b4e91d5ec6d5916ebb45155b0c8920291ba9f361d65385806"
                        ],
                        "sizeBytes": 221674175
                    },
                    {
                        "names": [
                            "loadgenerator:5a9146014f927e4ce966165203954b5485e9ecb9fefec215dea8d6d37a46c657",
                            "loadgenerator:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 190103320
                    },
                    {
                        "names": [
                            "eclipse-temurin@sha256:b5a1250bb72d804d49471207e2ebb574caffc13ac76f99618fb5ea06af621056"
                        ],
                        "sizeBytes": 189763870
                    },
                    {
                        "names": [
                            "node@sha256:37750e51d61bef92165b2e29a77da4277ba0777258446b7a9c99511f119db096"
                        ],
                        "sizeBytes": 182177851
                    },
                    {
                        "names": [
                            "python@sha256:1d517e04d033a04d86f7de57bf41cae166ca362b37a1cb229e326bc1d754db55"
                        ],
                        "sizeBytes": 128165043
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-apiserver@sha256:8db46adefb0f251da210504e2ce268c36a5a7c630667418ea4601f63c9057a2d",
                            "registry.k8s.io/kube-apiserver:v1.28.3"
                        ],
                        "sizeBytes": 125740879
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kubernetes-dashboard-amd64@sha256:1d2e1229a918f4bc38b5a3f9f5f11302b3e71f8397b492afac7f273a0008776a",
                            "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0"
                        ],
                        "sizeBytes": 122460923
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-controller-manager@sha256:640661231facded984f698e79315bceb5391b04e5159662e940e6e5ab2098707",
                            "registry.k8s.io/kube-controller-manager:v1.28.3"
                        ],
                        "sizeBytes": 121764215
                    },
                    {
                        "names": [
                            "cartservice:aec9693ce19693de34c15be89a80ea5e3e14b0e2b76913f8c4f42d29532955c5",
                            "cartservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 114626161
                    },
                    {
                        "names": [
                            "redis@sha256:2dfa6432744659268d001d16c39f7be52ee73ef7e1001ff80643f0f7bdee117e",
                            "redis:5.0.4"
                        ],
                        "sizeBytes": 94995285
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-proxy@sha256:73a9f275e1fa5f0b9ae744914764847c2c4fdc66e9e528d67dea70007f9a6072",
                            "registry.k8s.io/kube-proxy:v1.28.3"
                        ],
                        "sizeBytes": 73100828
                    },
                    {
                        "names": [
                            "docker.elastic.co/eck/eck-operator@sha256:c0621c1c33eac3a241b8999ca619d6a25153ca2541ff0cad4d8c7b318d42e897",
                            "docker.elastic.co/eck/eck-operator:2.4.0"
                        ],
                        "sizeBytes": 66345555
                    },
                    {
                        "names": [
                            "registry.k8s.io/kube-scheduler@sha256:2cfaab2fe5e5937bc37f3d05f3eb7a4912a981ab8375f1d9c2c3190b259d1725",
                            "registry.k8s.io/kube-scheduler:v1.28.3"
                        ],
                        "sizeBytes": 60074461
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e",
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 53612153
                    },
                    {
                        "names": [
                            "kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c"
                        ],
                        "sizeBytes": 43815949
                    },
                    {
                        "names": [
                            "redis@sha256:6a7b3c6e3a6854424d96953172cac1ca97f0fc90094bcc479f3949e29bb053af",
                            "redis:alpine"
                        ],
                        "sizeBytes": 43448172
                    },
                    {
                        "names": [
                            "frontend:d27dc0bb81720b6e1c2d9f0f54b90c5311c718e63d89977ce88d032a37842a14",
                            "frontend:v0.5.0-729-g515f5c5e-dirty"
                        ],
                        "sizeBytes": 42217434
                    },
                    {
                        "names": [
                            "gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                            "gcr.io/k8s-minikube/storage-provisioner:v5"
                        ],
                        "sizeBytes": 31465472
                    },
                    {
                        "names": [
                            "productcatalogservice:f86d13fe21546aa5a2cb8fde1e6ee05ae5915938431a8f9858bbf851adb018be",
                            "productcatalogservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 29202511
                    },
                    {
                        "names": [
                            "checkoutservice:cdff08de3cc404c1a5654a61ac87383d4a7426cd57184ef2f21d9ca7b424fbb9",
                            "checkoutservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 29157807
                    },
                    {
                        "names": [
                            "shippingservice:6aeafd2156fb8a3757e7cd005ff931770e4204653b65571dbf376446e936ef70",
                            "shippingservice:v0.5.0-729-g515f5c5e"
                        ],
                        "sizeBytes": 27947317
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/dotnet/runtime-deps@sha256:ebf0aba83039e9931572187de805925a3e2860f0f505dfd8097313ff5fc269b5"
                        ],
                        "sizeBytes": 15553093
                    },
                    {
                        "names": [
                            "alpine@sha256:eece025e432126ce23f223450a0326fbebde39cdf496a85d8c016293fc851978"
                        ],
                        "sizeBytes": 7335363
                    },
                    {
                        "names": [
                            "busybox@sha256:5c63a9b46e7139d2d5841462859edcbbf57f238af891b6096578e5894cfe5ae2",
                            "busybox:latest"
                        ],
                        "sizeBytes": 4261566
                    },
                    {
                        "names": [
                            "busybox@sha256:3fbc632167424a6d997e74f52b878d7cc478225cffac6bc977eedfe51c7f4e79"
                        ],
                        "sizeBytes": 4261566
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5dd5756b68-2szlj.17a267f545dc50ba",
                "namespace": "kube-system",
                "uid": "000e7bb1-3965-4e2a-bdb6-6496139c187d",
                "resourceVersion": "228653",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5dd5756b68-2szlj",
                "uid": "a19a0812-3484-43d9-a7e1-dd3d287358f5",
                "apiVersion": "v1",
                "resourceVersion": "202908"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-5dd5756b68-2szlj.17a267f59c1bd855",
                "namespace": "kube-system",
                "uid": "651921cb-6eae-4db3-9d29-6edaa0bcd422",
                "resourceVersion": "228675",
                "creationTimestamp": "2023-12-20T02:05:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5dd5756b68-2szlj",
                "uid": "a19a0812-3484-43d9-a7e1-dd3d287358f5",
                "apiVersion": "v1",
                "resourceVersion": "202908",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.10.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:13Z",
            "lastTimestamp": "2023-12-20T02:05:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-5dd5756b68-2szlj.17a267f5a28161a5",
                "namespace": "kube-system",
                "uid": "7053ba4f-db1f-47a7-8b52-15cd667afb94",
                "resourceVersion": "228682",
                "creationTimestamp": "2023-12-20T02:05:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5dd5756b68-2szlj",
                "uid": "a19a0812-3484-43d9-a7e1-dd3d287358f5",
                "apiVersion": "v1",
                "resourceVersion": "202908",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:13Z",
            "lastTimestamp": "2023-12-20T02:05:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "coredns-5dd5756b68-2szlj.17a267f5b07081a9",
                "namespace": "kube-system",
                "uid": "f2e8a766-22b5-4eb7-9005-e089dfd95bf7",
                "resourceVersion": "228687",
                "creationTimestamp": "2023-12-20T02:05:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5dd5756b68-2szlj",
                "uid": "a19a0812-3484-43d9-a7e1-dd3d287358f5",
                "apiVersion": "v1",
                "resourceVersion": "202908",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:14Z",
            "lastTimestamp": "2023-12-20T02:05:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.17a267f34bde8d8e",
                "namespace": "kube-system",
                "uid": "2fefffc9-4818-4a20-ba8d-d5c1c5e9e397",
                "resourceVersion": "228632",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "9aac5b5c8815def09a2ef9e37b89da55",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.17a267f368c31263",
                "namespace": "kube-system",
                "uid": "4a1b415b-a46a-4c34-850d-89884a814a23",
                "resourceVersion": "228635",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "9aac5b5c8815def09a2ef9e37b89da55",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/etcd:3.5.9-0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.17a267f36ea92537",
                "namespace": "kube-system",
                "uid": "94940642-0754-4c93-baf7-c5350b3ae379",
                "resourceVersion": "228641",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "9aac5b5c8815def09a2ef9e37b89da55",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Created",
            "message": "Created container etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "etcd-minikube.17a267f3796d4f89",
                "namespace": "kube-system",
                "uid": "a9d6b667-04ff-44fc-8367-00eefc672d3b",
                "resourceVersion": "228644",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-minikube",
                "uid": "9aac5b5c8815def09a2ef9e37b89da55",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Started",
            "message": "Started container etcd",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "k8s.io-minikube-hostpath.17a267fd7d5f3f1b",
                "namespace": "kube-system",
                "uid": "0ff452d4-a7e6-407b-b72c-42e0e8c8a57a",
                "resourceVersion": "228766",
                "creationTimestamp": "2023-12-20T02:05:47Z"
            },
            "involvedObject": {
                "kind": "Endpoints",
                "namespace": "kube-system",
                "name": "k8s.io-minikube-hostpath",
                "uid": "63f0fdf6-9415-44e2-8e19-06d6336b7481",
                "apiVersion": "v1",
                "resourceVersion": "228765"
            },
            "reason": "LeaderElection",
            "message": "minikube_5bf9672a-e643-4b6e-bda7-aa30e4cda2c6 became leader",
            "source": {
                "component": "k8s.io/minikube-hostpath_minikube_5bf9672a-e643-4b6e-bda7-aa30e4cda2c6"
            },
            "firstTimestamp": "2023-12-20T02:05:47Z",
            "lastTimestamp": "2023-12-20T02:05:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.17a267f34b611984",
                "namespace": "kube-system",
                "uid": "afc15103-040d-42c5-aa2e-b6e1d31a634e",
                "resourceVersion": "228631",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "55b4bbe24dac3803a7379f9ae169d6ba",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.17a267f3693b7026",
                "namespace": "kube-system",
                "uid": "be97bab7-66c1-42cf-8956-6299b9b2a6b7",
                "resourceVersion": "228637",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "55b4bbe24dac3803a7379f9ae169d6ba",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-apiserver:v1.28.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.17a267f36ea5f18b",
                "namespace": "kube-system",
                "uid": "d5576bb5-b1cd-4ec6-ac54-b926cccd4ec4",
                "resourceVersion": "228640",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "55b4bbe24dac3803a7379f9ae169d6ba",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Created",
            "message": "Created container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube.17a267f378cd8dea",
                "namespace": "kube-system",
                "uid": "c96e475e-ec8e-45b0-8da3-31084cb72a76",
                "resourceVersion": "228643",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-minikube",
                "uid": "55b4bbe24dac3803a7379f9ae169d6ba",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Started",
            "message": "Started container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.17a267f3579993dc",
                "namespace": "kube-system",
                "uid": "324fad0e-a180-4ea5-8f04-af661afe5d0a",
                "resourceVersion": "228633",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "7da72fc2e2cfb27aacf6cffd1c72da00",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.17a267f3692001ce",
                "namespace": "kube-system",
                "uid": "a22a7cb5-4dbe-493a-872c-54a96f4827b6",
                "resourceVersion": "228636",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "7da72fc2e2cfb27aacf6cffd1c72da00",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-controller-manager:v1.28.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.17a267f36ea50d58",
                "namespace": "kube-system",
                "uid": "dd1ed9a6-7461-44b8-8ed7-5f4ff4e67cf9",
                "resourceVersion": "228639",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "7da72fc2e2cfb27aacf6cffd1c72da00",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Created",
            "message": "Created container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube.17a267f379d54456",
                "namespace": "kube-system",
                "uid": "b02be691-9861-4640-80b6-b723c42261c8",
                "resourceVersion": "228646",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-minikube",
                "uid": "7da72fc2e2cfb27aacf6cffd1c72da00",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Started",
            "message": "Started container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-2s2mn.17a267f546e4f95a",
                "namespace": "kube-system",
                "uid": "4a9b92e2-2cf7-4a06-92cd-5502e48ec348",
                "resourceVersion": "228657",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-2s2mn",
                "uid": "919a341e-0511-471f-bbb6-942878c86bc5",
                "apiVersion": "v1",
                "resourceVersion": "202879"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-2s2mn.17a267f569ca57ad",
                "namespace": "kube-system",
                "uid": "3ef4b063-bef0-4aea-b2dd-c9942298d85d",
                "resourceVersion": "228666",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-2s2mn",
                "uid": "919a341e-0511-471f-bbb6-942878c86bc5",
                "apiVersion": "v1",
                "resourceVersion": "202879",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.28.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-2s2mn.17a267f56fc9a8f5",
                "namespace": "kube-system",
                "uid": "5bfe00f1-eed2-431c-964b-7a5a9e23f253",
                "resourceVersion": "228668",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-2s2mn",
                "uid": "919a341e-0511-471f-bbb6-942878c86bc5",
                "apiVersion": "v1",
                "resourceVersion": "202879",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-proxy-2s2mn.17a267f58a6290e1",
                "namespace": "kube-system",
                "uid": "99c88136-ef02-4841-9e3a-6e4fa4da4301",
                "resourceVersion": "228671",
                "creationTimestamp": "2023-12-20T02:05:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-2s2mn",
                "uid": "919a341e-0511-471f-bbb6-942878c86bc5",
                "apiVersion": "v1",
                "resourceVersion": "202879",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:13Z",
            "lastTimestamp": "2023-12-20T02:05:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.17a267f359accf36",
                "namespace": "kube-system",
                "uid": "ed56f2df-bd84-4fd6-806a-d3eb271d4c7e",
                "resourceVersion": "228634",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "75ac196d3709dde303d8a81c035c2c28",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.17a267f36ce0a920",
                "namespace": "kube-system",
                "uid": "4d9bf501-67eb-47ff-8fdc-2f0f4ac72a6a",
                "resourceVersion": "228638",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "75ac196d3709dde303d8a81c035c2c28",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-scheduler:v1.28.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.17a267f37073642c",
                "namespace": "kube-system",
                "uid": "3ea29c77-fc7c-4b9b-a5d1-ce78ac0714d5",
                "resourceVersion": "228642",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "75ac196d3709dde303d8a81c035c2c28",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Created",
            "message": "Created container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube.17a267f37984c99a",
                "namespace": "kube-system",
                "uid": "0dafac49-f776-4b2e-aea5-f370d6ef6978",
                "resourceVersion": "228645",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-minikube",
                "uid": "75ac196d3709dde303d8a81c035c2c28",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Started",
            "message": "Started container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:04Z",
            "lastTimestamp": "2023-12-20T02:05:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a26897179650d8",
                "namespace": "kube-system",
                "uid": "112b2371-ad9f-45ae-8e6c-9b837c2daee1",
                "resourceVersion": "229963",
                "creationTimestamp": "2023-12-20T02:16:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229955"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kubernetes-dashboard-55c4b68877-8lvns to minikube",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-20T02:16:47.244514Z",
            "action": "Binding",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a268973b06c371",
                "namespace": "kube-system",
                "uid": "6efcf5a3-1f54-44fe-9ccc-f796532d80e0",
                "resourceVersion": "229970",
                "creationTimestamp": "2023-12-20T02:16:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229958",
                "fieldPath": "spec.containers{kubernetes-dashboard}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:16:47Z",
            "lastTimestamp": "2023-12-20T02:16:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a268a134d4f6c5",
                "namespace": "kube-system",
                "uid": "6dc0e1ff-ce5e-4700-8009-4c8601cbddb1",
                "resourceVersion": "230046",
                "creationTimestamp": "2023-12-20T02:17:30Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229958",
                "fieldPath": "spec.containers{kubernetes-dashboard}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\" in 42.845s (42.845s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:17:30Z",
            "lastTimestamp": "2023-12-20T02:17:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a268a144bad924",
                "namespace": "kube-system",
                "uid": "3824085a-48f6-479c-b6e7-19288ced2712",
                "resourceVersion": "230048",
                "creationTimestamp": "2023-12-20T02:17:30Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229958",
                "fieldPath": "spec.containers{kubernetes-dashboard}"
            },
            "reason": "Created",
            "message": "Created container kubernetes-dashboard",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:17:30Z",
            "lastTimestamp": "2023-12-20T02:17:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a268a14b12db23",
                "namespace": "kube-system",
                "uid": "268d9661-f7ad-4f6c-95ac-3fdfa762acc0",
                "resourceVersion": "230051",
                "creationTimestamp": "2023-12-20T02:17:31Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229958",
                "fieldPath": "spec.containers{kubernetes-dashboard}"
            },
            "reason": "Started",
            "message": "Started container kubernetes-dashboard",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:17:31Z",
            "lastTimestamp": "2023-12-20T02:17:31Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877-8lvns.17a269de4829c5c2",
                "namespace": "kube-system",
                "uid": "4ca5dea9-b1d1-429a-853e-e0e71c13bb1f",
                "resourceVersion": "232574",
                "creationTimestamp": "2023-12-20T02:40:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877-8lvns",
                "uid": "789de802-d2c1-441d-8a61-833d05c138bf",
                "apiVersion": "v1",
                "resourceVersion": "229958",
                "fieldPath": "spec.containers{kubernetes-dashboard}"
            },
            "reason": "Killing",
            "message": "Stopping container kubernetes-dashboard",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:40:12Z",
            "lastTimestamp": "2023-12-20T02:40:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-55c4b68877.17a2689716024067",
                "namespace": "kube-system",
                "uid": "fcf50599-3f70-4829-bfa5-f88e1c70f145",
                "resourceVersion": "229957",
                "creationTimestamp": "2023-12-20T02:16:47Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard-55c4b68877",
                "uid": "056011d5-7d6d-44a9-990a-fa061a758850",
                "apiVersion": "apps/v1",
                "resourceVersion": "229952"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kubernetes-dashboard-55c4b68877-8lvns",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-20T02:16:47Z",
            "lastTimestamp": "2023-12-20T02:16:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard.17a26897153a1d33",
                "namespace": "kube-system",
                "uid": "35a97e82-c396-4d24-a59c-96724679fcf1",
                "resourceVersion": "229954",
                "creationTimestamp": "2023-12-20T02:16:47Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "kubernetes-dashboard",
                "uid": "a44cc590-092d-4472-b31b-78c64ef27315",
                "apiVersion": "apps/v1",
                "resourceVersion": "229951"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set kubernetes-dashboard-55c4b68877 to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-20T02:16:47Z",
            "lastTimestamp": "2023-12-20T02:16:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "storage-provisioner.17a267f5473cc351",
                "namespace": "kube-system",
                "uid": "0fcc21cd-7cf3-4db8-9fe0-14e61112b4d9",
                "resourceVersion": "228659",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "apiVersion": "v1",
                "resourceVersion": "202992"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.17a267f56d4b583a",
                "namespace": "kube-system",
                "uid": "04a235f2-43a5-43dd-9c66-9eaab4a1c47a",
                "resourceVersion": "228737",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "apiVersion": "v1",
                "resourceVersion": "202992",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Pulled",
            "message": "Container image \"gcr.io/k8s-minikube/storage-provisioner:v5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:29Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.17a267f5710e2405",
                "namespace": "kube-system",
                "uid": "0a0f452b-93f6-4ef9-a608-aa309956b2f6",
                "resourceVersion": "228738",
                "creationTimestamp": "2023-12-20T02:05:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "apiVersion": "v1",
                "resourceVersion": "202992",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Created",
            "message": "Created container storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:12Z",
            "lastTimestamp": "2023-12-20T02:05:30Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.17a267f5882e7965",
                "namespace": "kube-system",
                "uid": "cb32b14d-bc26-4507-8e89-743412894fe6",
                "resourceVersion": "228739",
                "creationTimestamp": "2023-12-20T02:05:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "apiVersion": "v1",
                "resourceVersion": "202992",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "Started",
            "message": "Started container storage-provisioner",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:13Z",
            "lastTimestamp": "2023-12-20T02:05:30Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "storage-provisioner.17a267f5a231d9c7",
                "namespace": "kube-system",
                "uid": "ad9e3c7c-3e7f-4beb-bc7d-e9a76d2bdab2",
                "resourceVersion": "228697",
                "creationTimestamp": "2023-12-20T02:05:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "storage-provisioner",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "apiVersion": "v1",
                "resourceVersion": "202992",
                "fieldPath": "spec.containers{storage-provisioner}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container storage-provisioner in pod storage-provisioner_kube-system(87332108-ea61-4677-a7e7-ce868888bb26)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:13Z",
            "lastTimestamp": "2023-12-20T02:05:15Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "7bd75466-37f6-48a4-bd66-e17e83327d9d",
                "resourceVersion": "239",
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "99930bd5-eb71-47c6-8b22-8f337043848b",
                "resourceVersion": "228684",
                "generation": 1,
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.28.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "a74a0454-f24f-47f5-bbba-e49a3c831fa0",
                "resourceVersion": "228718",
                "generation": 4,
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 4,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-11-29T23:32:59Z",
                        "lastTransitionTime": "2023-11-29T23:32:59Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-11-29T23:33:02Z",
                        "lastTransitionTime": "2023-11-29T23:32:59Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-5dd5756b68\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5dd5756b68",
                "namespace": "kube-system",
                "uid": "b311c67e-8ae6-4b56-a07f-ee285b2f79f3",
                "resourceVersion": "373",
                "generation": 1,
                "creationTimestamp": "2023-11-29T23:32:59Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5dd5756b68"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "a74a0454-f24f-47f5-bbba-e49a3c831fa0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5dd5756b68"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5dd5756b68"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232697"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5dd5756b68-2szlj",
                "generateName": "coredns-5dd5756b68-",
                "namespace": "kube-system",
                "uid": "a19a0812-3484-43d9-a7e1-dd3d287358f5",
                "resourceVersion": "228700",
                "creationTimestamp": "2023-11-29T23:33:00Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5dd5756b68"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5dd5756b68",
                        "uid": "b311c67e-8ae6-4b56-a07f-ee285b2f79f3",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-9ss4m",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-9ss4m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "minikube",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:33:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:15Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:15Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:33:00Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "10.244.0.37",
                "podIPs": [
                    {
                        "ip": "10.244.0.37"
                    }
                ],
                "startTime": "2023-11-29T23:33:00Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:14Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-19T03:53:18Z",
                                "finishedAt": "2023-12-19T08:11:02Z",
                                "containerID": "docker://9d260fc059c50b16ea0cccc9f2831b3e7c1014c6a91ba6462ace95e558521d4a"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "imageID": "docker-pullable://registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e",
                        "containerID": "docker://bd2a60ec8674b1e7026994a1208e7e0b68d1643b2d96f45189538f2312931dde",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-minikube",
                "namespace": "kube-system",
                "uid": "9dabcd66-28cd-4982-9499-83be73f04e13",
                "resourceVersion": "228699",
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://192.168.49.2:2379",
                    "kubernetes.io/config.hash": "9aac5b5c8815def09a2ef9e37b89da55",
                    "kubernetes.io/config.mirror": "9aac5b5c8815def09a2ef9e37b89da55",
                    "kubernetes.io/config.seen": "2023-11-29T23:32:47.797031031Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/minikube/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.9-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://192.168.49.2:2379",
                            "--cert-file=/var/lib/minikube/certs/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/minikube/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://192.168.49.2:2380",
                            "--initial-cluster=minikube=https://192.168.49.2:2380",
                            "--key-file=/var/lib/minikube/certs/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://192.168.49.2:2380",
                            "--name=minikube",
                            "--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/var/lib/minikube/certs/etcd/peer.key",
                            "--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt",
                            "--proxy-refresh-interval=70000",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/minikube/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/var/lib/minikube/certs/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:15Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:15Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-12-20T02:05:03Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:04Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-19T03:53:11Z",
                                "finishedAt": "2023-12-19T08:10:57Z",
                                "containerID": "docker://8eb9b6df9c5cb612ef37cc8ce7198c104a281ee23ed656755281852dbc2c2104"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/etcd:3.5.9-0",
                        "imageID": "docker-pullable://registry.k8s.io/etcd@sha256:e013d0d5e4e25d00c61a7ff839927a1f36479678f11e49502b53a5e0b14f10c3",
                        "containerID": "docker://e78c2ce3ee4032b6d8a8f62cf108268467bbc441a018403ffb9dffb7448b7c13",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-minikube",
                "namespace": "kube-system",
                "uid": "26a52d2c-35df-4e76-a23a-8c79d459a9fd",
                "resourceVersion": "228710",
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "192.168.49.2:8443",
                    "kubernetes.io/config.hash": "55b4bbe24dac3803a7379f9ae169d6ba",
                    "kubernetes.io/config.mirror": "55b4bbe24dac3803a7379f9ae169d6ba",
                    "kubernetes.io/config.seen": "2023-11-29T23:32:47.797023265Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.28.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=192.168.49.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt",
                            "--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt",
                            "--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=8443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/var/lib/minikube/certs/sa.pub",
                            "--service-account-signing-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/var/lib/minikube/certs/apiserver.crt",
                            "--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 8443,
                                "host": "192.168.49.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:20Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:20Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-12-20T02:05:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:04Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2023-12-19T03:53:11Z",
                                "finishedAt": "2023-12-19T08:10:58Z",
                                "containerID": "docker://6de09ead467b45ad48aa9b33ac4ec3684901b0aa1d677c1c5190d84d6d7f5639"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/kube-apiserver:v1.28.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-apiserver@sha256:8db46adefb0f251da210504e2ce268c36a5a7c630667418ea4601f63c9057a2d",
                        "containerID": "docker://3c73314392f608c18beecddf35374362844a5c344ae69b37753f0c879ed3cc7b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-minikube",
                "namespace": "kube-system",
                "uid": "667ab7ec-169a-47d0-8cfa-d5a3481b614e",
                "resourceVersion": "228708",
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "7da72fc2e2cfb27aacf6cffd1c72da00",
                    "kubernetes.io/config.mirror": "7da72fc2e2cfb27aacf6cffd1c72da00",
                    "kubernetes.io/config.seen": "2023-11-29T23:32:47.797028596Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.28.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=mk",
                            "--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-signing-key-file=/var/lib/minikube/certs/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=false",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--root-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--service-account-private-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/var/lib/minikube/certs"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-12-20T02:05:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:04Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2023-12-19T03:53:10Z",
                                "finishedAt": "2023-12-19T08:10:57Z",
                                "containerID": "docker://2c9a43b3963894c8a44604c0120247e85e941aba501d435998ad4c7af935756b"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/kube-controller-manager:v1.28.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-controller-manager@sha256:640661231facded984f698e79315bceb5391b04e5159662e940e6e5ab2098707",
                        "containerID": "docker://477257c169e968917dad6fb79108db1de4549437256664fc99ea3016718da000",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-2s2mn",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "919a341e-0511-471f-bbb6-942878c86bc5",
                "resourceVersion": "228676",
                "creationTimestamp": "2023-11-29T23:33:00Z",
                "labels": {
                    "controller-revision-hash": "dffc744c9",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "99930bd5-eb71-47c6-8b22-8f337043848b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-2dh4p",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.28.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-2dh4p",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:33:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:13Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:13Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:33:00Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-11-29T23:33:00Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:13Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 2,
                                "reason": "Error",
                                "startedAt": "2023-12-19T03:53:17Z",
                                "finishedAt": "2023-12-19T08:10:57Z",
                                "containerID": "docker://2ba5b7c6c5ee19685b027bdfee220c85a56f3e334927c09d88a780856249c19b"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/kube-proxy:v1.28.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-proxy@sha256:73a9f275e1fa5f0b9ae744914764847c2c4fdc66e9e528d67dea70007f9a6072",
                        "containerID": "docker://3dbf1554db74271ec88febd65d80709f657c05507d92210aede57349623a2376",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-minikube",
                "namespace": "kube-system",
                "uid": "70ad28d3-1535-4c39-8dd5-df6996f70e89",
                "resourceVersion": "228712",
                "creationTimestamp": "2023-11-29T23:32:47Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "75ac196d3709dde303d8a81c035c2c28",
                    "kubernetes.io/config.mirror": "75ac196d3709dde303d8a81c035c2c28",
                    "kubernetes.io/config.seen": "2023-11-29T23:32:47.797029875Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.28.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=false"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:21Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:21Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:03Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-12-20T02:05:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:04Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2023-12-19T03:53:10Z",
                                "finishedAt": "2023-12-19T08:10:57Z",
                                "containerID": "docker://e08cf0ad52400099e87e6fcab898ef7d61485f9909f4711897f42469a25f859a"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "registry.k8s.io/kube-scheduler:v1.28.3",
                        "imageID": "docker-pullable://registry.k8s.io/kube-scheduler@sha256:2cfaab2fe5e5937bc37f3d05f3eb7a4912a981ab8375f1d9c2c3190b259d1725",
                        "containerID": "docker://461f8e31a0c070a4ac1042baa8b30ebb026acd14a8789b3a463bc364ea32a1ea",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "storage-provisioner",
                "namespace": "kube-system",
                "uid": "87332108-ea61-4677-a7e7-ce868888bb26",
                "resourceVersion": "228740",
                "creationTimestamp": "2023-11-29T23:32:49Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "integration-test": "storage-provisioner"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"integration-test\":\"storage-provisioner\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"command\":[\"/storage-provisioner\"],\"image\":\"gcr.io/k8s-minikube/storage-provisioner:v5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"storage-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"storage-provisioner\",\"volumes\":[{\"hostPath\":{\"path\":\"/tmp\",\"type\":\"Directory\"},\"name\":\"tmp\"}]}}\n"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "hostPath": {
                            "path": "/tmp",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-xkv9x",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "storage-provisioner",
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "command": [
                            "/storage-provisioner"
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-xkv9x",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "storage-provisioner",
                "serviceAccount": "storage-provisioner",
                "nodeName": "minikube",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:32:59Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:30Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-12-20T02:05:30Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-11-29T23:32:59Z"
                    }
                ],
                "hostIP": "192.168.49.2",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "startTime": "2023-11-29T23:32:59Z",
                "containerStatuses": [
                    {
                        "name": "storage-provisioner",
                        "state": {
                            "running": {
                                "startedAt": "2023-12-20T02:05:30Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 1,
                                "reason": "Error",
                                "startedAt": "2023-12-20T02:05:13Z",
                                "finishedAt": "2023-12-20T02:05:13Z",
                                "containerID": "docker://16a823ae3355c8d86d9784ff02a07bab1c87581c39c5cd6d1f19d41d44d7a8ce"
                            }
                        },
                        "ready": true,
                        "restartCount": 7,
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                        "containerID": "docker://76f3b0d1db08f4152c7418456f4871dd7a5d6861e806d62354f1a993e2b983ab",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-5dd5756b68-2szlj ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = f869070685748660180df1b7a47d58cdafcf2f368266578c062d1151dc2c900964aecc5975e8882e6de6fdfb6460463e30ebfaad2ec8f0c3c6436f80225b3b5b
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] 127.0.0.1:55589 - 15612 "HINFO IN 3661465590260812283.1599873834175071706. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.138822074s
[INFO] 10.244.0.41:50158 - 27053 "A IN telemetry.influxdata.com.default.svc.cluster.local. udp 79 false 1232" NXDOMAIN qr,aa,rd 161 0.000508449s
[INFO] 10.244.0.41:37323 - 36179 "AAAA IN telemetry.influxdata.com.default.svc.cluster.local. udp 79 false 1232" NXDOMAIN qr,aa,rd 161 0.000799618s
[INFO] 10.244.0.41:58296 - 8608 "AAAA IN telemetry.influxdata.com.svc.cluster.local. udp 71 false 1232" NXDOMAIN qr,aa,rd 153 0.000273637s
[INFO] 10.244.0.41:33048 - 58996 "A IN telemetry.influxdata.com.svc.cluster.local. udp 71 false 1232" NXDOMAIN qr,aa,rd 153 0.000268809s
[INFO] 10.244.0.41:57533 - 14300 "A IN telemetry.influxdata.com.cluster.local. udp 67 false 1232" NXDOMAIN qr,aa,rd 149 0.000097497s
[INFO] 10.244.0.41:36278 - 54429 "AAAA IN telemetry.influxdata.com.cluster.local. udp 67 false 1232" NXDOMAIN qr,aa,rd 149 0.000180846s
[INFO] 10.244.0.41:45287 - 54298 "A IN telemetry.influxdata.com. udp 53 false 1232" NOERROR qr,rd,ra 289 0.123676869s
[INFO] 10.244.0.41:35652 - 42427 "AAAA IN telemetry.influxdata.com. udp 53 false 1232" NOERROR qr,rd,ra 337 0.187462908s
==== END logs for container coredns of pod kube-system/coredns-5dd5756b68-2szlj ====
==== START logs for container etcd of pod kube-system/etcd-minikube ====
{"level":"warn","ts":"2023-12-20T02:05:04.618997Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2023-12-20T02:05:04.624066Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2023-12-20T02:05:04.626581Z","caller":"etcdmain/etcd.go:116","msg":"server has been already initialized","data-dir":"/var/lib/minikube/etcd","dir-type":"member"}
{"level":"warn","ts":"2023-12-20T02:05:04.626876Z","caller":"embed/config.go:673","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2023-12-20T02:05:04.626976Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-12-20T02:05:04.627204Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-12-20T02:05:04.629432Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2023-12-20T02:05:04.630294Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.9","git-sha":"bdbbde998","go-version":"go1.19.9","go-os":"linux","go-arch":"amd64","max-cpu-set":6,"max-cpu-available":6,"member-initialized":true,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"","initial-cluster-state":"new","initial-cluster-token":"","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-12-20T02:05:04.695738Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"64.780878ms"}
{"level":"info","ts":"2023-12-20T02:05:07.466637Z","caller":"etcdserver/server.go:509","msg":"recovered v2 store from snapshot","snapshot-index":280028,"snapshot-size":"7.5 kB"}
{"level":"info","ts":"2023-12-20T02:05:07.466796Z","caller":"etcdserver/server.go:522","msg":"recovered v3 backend from snapshot","backend-size-bytes":5529600,"backend-size":"5.5 MB","backend-size-in-use-bytes":2048000,"backend-size-in-use":"2.0 MB"}
{"level":"info","ts":"2023-12-20T02:05:07.684682Z","caller":"etcdserver/raft.go:530","msg":"restarting local member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","commit-index":283627}
{"level":"info","ts":"2023-12-20T02:05:07.685067Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-12-20T02:05:07.685211Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 3"}
{"level":"info","ts":"2023-12-20T02:05:07.685252Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [aec36adc501070cc], term: 3, commit: 283627, applied: 280028, lastindex: 283627, lastterm: 3]"}
{"level":"info","ts":"2023-12-20T02:05:07.68552Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-12-20T02:05:07.685544Z","caller":"membership/cluster.go:278","msg":"recovered/added member from store","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","recovered-remote-peer-id":"aec36adc501070cc","recovered-remote-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-12-20T02:05:07.68563Z","caller":"membership/cluster.go:287","msg":"set cluster version from store","cluster-version":"3.5"}
{"level":"warn","ts":"2023-12-20T02:05:07.687569Z","caller":"auth/store.go:1238","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-12-20T02:05:07.689346Z","caller":"mvcc/kvstore.go:323","msg":"restored last compact revision","meta-bucket-name":"meta","meta-bucket-name-key":"finishedCompactRev","restored-compact-revision":227769}
{"level":"info","ts":"2023-12-20T02:05:07.70514Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":228600}
{"level":"info","ts":"2023-12-20T02:05:07.707743Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-12-20T02:05:07.709956Z","caller":"etcdserver/corrupt.go:95","msg":"starting initial corruption check","local-member-id":"aec36adc501070cc","timeout":"7s"}
{"level":"info","ts":"2023-12-20T02:05:07.710996Z","caller":"etcdserver/corrupt.go:165","msg":"initial corruption checking passed; no corruption","local-member-id":"aec36adc501070cc"}
{"level":"info","ts":"2023-12-20T02:05:07.711274Z","caller":"etcdserver/server.go:845","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.9","cluster-id":"fa54960ea34d58be","cluster-version":"3.5"}
{"level":"info","ts":"2023-12-20T02:05:07.711551Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-12-20T02:05:07.715031Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-12-20T02:05:07.715301Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-12-20T02:05:07.715383Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-12-20T02:05:07.720109Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-12-20T02:05:07.720264Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-12-20T02:05:07.720296Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-12-20T02:05:07.720948Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-12-20T02:05:07.721031Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-12-20T02:05:08.285924Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 3"}
{"level":"info","ts":"2023-12-20T02:05:08.286018Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 3"}
{"level":"info","ts":"2023-12-20T02:05:08.28639Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 3"}
{"level":"info","ts":"2023-12-20T02:05:08.286618Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 4"}
{"level":"info","ts":"2023-12-20T02:05:08.286646Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 4"}
{"level":"info","ts":"2023-12-20T02:05:08.286668Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 4"}
{"level":"info","ts":"2023-12-20T02:05:08.286742Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 4"}
{"level":"info","ts":"2023-12-20T02:05:08.28872Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-12-20T02:05:08.288873Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-12-20T02:05:08.289047Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-12-20T02:05:08.289987Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-12-20T02:05:08.29024Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-12-20T02:05:08.290992Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-12-20T02:05:08.291115Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-12-20T02:15:08.318879Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":229231}
{"level":"info","ts":"2023-12-20T02:15:08.335753Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":229231,"took":"16.639223ms","hash":134717460}
{"level":"info","ts":"2023-12-20T02:15:08.335826Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":134717460,"revision":229231,"compact-revision":227769}
{"level":"warn","ts":"2023-12-20T02:17:30.926548Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"131.278671ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" ","response":"range_response_count:1 size:1112"}
{"level":"info","ts":"2023-12-20T02:17:30.926614Z","caller":"traceutil/trace.go:171","msg":"trace[290567944] range","detail":"{range_begin:/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath; range_end:; response_count:1; response_revision:230046; }","duration":"131.353927ms","start":"2023-12-20T02:17:30.795245Z","end":"2023-12-20T02:17:30.926599Z","steps":["trace[290567944] 'range keys from in-memory index tree'  (duration: 131.184012ms)"],"step_count":1}
{"level":"info","ts":"2023-12-20T02:20:08.420953Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":229769}
{"level":"info","ts":"2023-12-20T02:20:08.422223Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":229769,"took":"1.069771ms","hash":137317995}
{"level":"info","ts":"2023-12-20T02:20:08.422284Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":137317995,"revision":229769,"compact-revision":229231}
{"level":"info","ts":"2023-12-20T02:25:08.429519Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":230340}
{"level":"info","ts":"2023-12-20T02:25:08.43114Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":230340,"took":"1.269572ms","hash":1268724309}
{"level":"info","ts":"2023-12-20T02:25:08.431203Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1268724309,"revision":230340,"compact-revision":229769}
{"level":"info","ts":"2023-12-20T02:28:32.012842Z","caller":"traceutil/trace.go:171","msg":"trace[809457729] transaction","detail":"{read_only:false; response_revision:231262; number_of_response:1; }","duration":"152.682151ms","start":"2023-12-20T02:28:31.860145Z","end":"2023-12-20T02:28:32.012827Z","steps":["trace[809457729] 'process raft request'  (duration: 152.468545ms)"],"step_count":1}
{"level":"warn","ts":"2023-12-20T02:29:13.485248Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"393.158015ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/configmaps/elastic-system/elastic-operator-leader\" ","response":"range_response_count:1 size:607"}
{"level":"info","ts":"2023-12-20T02:29:13.485469Z","caller":"traceutil/trace.go:171","msg":"trace[1401576530] range","detail":"{range_begin:/registry/configmaps/elastic-system/elastic-operator-leader; range_end:; response_count:1; response_revision:231336; }","duration":"393.382049ms","start":"2023-12-20T02:29:13.092068Z","end":"2023-12-20T02:29:13.48545Z","steps":["trace[1401576530] 'range keys from in-memory index tree'  (duration: 393.026515ms)"],"step_count":1}
{"level":"warn","ts":"2023-12-20T02:29:13.485567Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2023-12-20T02:29:13.092055Z","time spent":"393.49485ms","remote":"127.0.0.1:49038","response type":"/etcdserverpb.KV/Range","request count":0,"request size":61,"response count":1,"response size":631,"request content":"key:\"/registry/configmaps/elastic-system/elastic-operator-leader\" "}
{"level":"info","ts":"2023-12-20T02:30:08.431858Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":230876}
{"level":"info","ts":"2023-12-20T02:30:08.43333Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":230876,"took":"1.263628ms","hash":1413858863}
{"level":"info","ts":"2023-12-20T02:30:08.433388Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1413858863,"revision":230876,"compact-revision":230340}
{"level":"info","ts":"2023-12-20T02:34:32.276737Z","caller":"traceutil/trace.go:171","msg":"trace[1995574298] transaction","detail":"{read_only:false; response_revision:231926; number_of_response:1; }","duration":"159.938728ms","start":"2023-12-20T02:34:32.116782Z","end":"2023-12-20T02:34:32.276721Z","steps":["trace[1995574298] 'process raft request'  (duration: 159.828677ms)"],"step_count":1}
{"level":"info","ts":"2023-12-20T02:35:08.372107Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":231441}
{"level":"info","ts":"2023-12-20T02:35:08.373592Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":231441,"took":"1.258249ms","hash":2358750448}
{"level":"info","ts":"2023-12-20T02:35:08.373656Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2358750448,"revision":231441,"compact-revision":230876}
{"level":"info","ts":"2023-12-20T02:40:08.377578Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":231995}
{"level":"info","ts":"2023-12-20T02:40:08.379083Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":231995,"took":"1.274438ms","hash":188178483}
{"level":"info","ts":"2023-12-20T02:40:08.379144Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":188178483,"revision":231995,"compact-revision":231441}
==== END logs for container etcd of pod kube-system/etcd-minikube ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
I1220 02:05:05.158659       1 options.go:220] external host was not specified, using 192.168.49.2
I1220 02:05:05.167452       1 server.go:148] Version: v1.28.3
I1220 02:05:05.168037       1 server.go:150] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1220 02:05:06.228381       1 shared_informer.go:311] Waiting for caches to sync for node_authorizer
I1220 02:05:06.295962       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I1220 02:05:06.296045       1 plugins.go:161] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I1220 02:05:06.296535       1 instance.go:298] Using reconciler: lease
I1220 02:05:08.370821       1 handler.go:232] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W1220 02:05:08.370900       1 genericapiserver.go:744] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I1220 02:05:08.885089       1 handler.go:232] Adding GroupVersion  v1 to ResourceManager
I1220 02:05:08.885448       1 instance.go:709] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I1220 02:05:09.631116       1 instance.go:709] API group "resource.k8s.io" is not enabled, skipping.
I1220 02:05:09.677222       1 handler.go:232] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W1220 02:05:09.677404       1 genericapiserver.go:744] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.677546       1 genericapiserver.go:744] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.679291       1 handler.go:232] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W1220 02:05:09.679365       1 genericapiserver.go:744] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I1220 02:05:09.681111       1 handler.go:232] Adding GroupVersion autoscaling v2 to ResourceManager
I1220 02:05:09.683767       1 handler.go:232] Adding GroupVersion autoscaling v1 to ResourceManager
W1220 02:05:09.683802       1 genericapiserver.go:744] Skipping API autoscaling/v2beta1 because it has no resources.
W1220 02:05:09.683818       1 genericapiserver.go:744] Skipping API autoscaling/v2beta2 because it has no resources.
I1220 02:05:09.688407       1 handler.go:232] Adding GroupVersion batch v1 to ResourceManager
W1220 02:05:09.688671       1 genericapiserver.go:744] Skipping API batch/v1beta1 because it has no resources.
I1220 02:05:09.689843       1 handler.go:232] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W1220 02:05:09.689898       1 genericapiserver.go:744] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.689905       1 genericapiserver.go:744] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.690398       1 handler.go:232] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W1220 02:05:09.690589       1 genericapiserver.go:744] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.690669       1 genericapiserver.go:744] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I1220 02:05:09.691458       1 handler.go:232] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
I1220 02:05:09.696198       1 handler.go:232] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W1220 02:05:09.696272       1 genericapiserver.go:744] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.696288       1 genericapiserver.go:744] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.697272       1 handler.go:232] Adding GroupVersion node.k8s.io v1 to ResourceManager
W1220 02:05:09.697366       1 genericapiserver.go:744] Skipping API node.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.697379       1 genericapiserver.go:744] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.699171       1 handler.go:232] Adding GroupVersion policy v1 to ResourceManager
W1220 02:05:09.699241       1 genericapiserver.go:744] Skipping API policy/v1beta1 because it has no resources.
I1220 02:05:09.703760       1 handler.go:232] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W1220 02:05:09.703850       1 genericapiserver.go:744] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.703863       1 genericapiserver.go:744] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.704965       1 handler.go:232] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W1220 02:05:09.705110       1 genericapiserver.go:744] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.705127       1 genericapiserver.go:744] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.707947       1 handler.go:232] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W1220 02:05:09.708013       1 genericapiserver.go:744] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.708022       1 genericapiserver.go:744] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.709413       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta3 to ResourceManager
I1220 02:05:09.711585       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta2 to ResourceManager
W1220 02:05:09.711660       1 genericapiserver.go:744] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.711670       1 genericapiserver.go:744] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.726836       1 handler.go:232] Adding GroupVersion apps v1 to ResourceManager
W1220 02:05:09.726912       1 genericapiserver.go:744] Skipping API apps/v1beta2 because it has no resources.
W1220 02:05:09.726930       1 genericapiserver.go:744] Skipping API apps/v1beta1 because it has no resources.
I1220 02:05:09.728885       1 handler.go:232] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W1220 02:05:09.728943       1 genericapiserver.go:744] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W1220 02:05:09.728951       1 genericapiserver.go:744] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I1220 02:05:09.730396       1 handler.go:232] Adding GroupVersion events.k8s.io v1 to ResourceManager
W1220 02:05:09.730574       1 genericapiserver.go:744] Skipping API events.k8s.io/v1beta1 because it has no resources.
I1220 02:05:09.779303       1 handler.go:232] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W1220 02:05:09.779636       1 genericapiserver.go:744] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I1220 02:05:10.966509       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I1220 02:05:10.966640       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I1220 02:05:10.967300       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I1220 02:05:10.968535       1 secure_serving.go:213] Serving securely on [::]:8443
I1220 02:05:10.968862       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I1220 02:05:10.968939       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1220 02:05:10.968987       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I1220 02:05:10.969057       1 aggregator.go:164] waiting for initial CRD sync...
I1220 02:05:10.969204       1 controller.go:78] Starting OpenAPI AggregationController
I1220 02:05:10.969299       1 system_namespaces_controller.go:67] Starting system namespaces controller
I1220 02:05:10.970021       1 apf_controller.go:372] Starting API Priority and Fairness config controller
I1220 02:05:10.970197       1 controller.go:80] Starting OpenAPI V3 AggregationController
I1220 02:05:10.970625       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1220 02:05:10.970965       1 controller.go:116] Starting legacy_token_tracking_controller
I1220 02:05:10.971003       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I1220 02:05:10.971242       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I1220 02:05:10.971323       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I1220 02:05:10.971418       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I1220 02:05:10.971434       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I1220 02:05:10.971960       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I1220 02:05:10.968613       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1220 02:05:10.973156       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1220 02:05:10.973174       1 controller.go:134] Starting OpenAPI controller
I1220 02:05:10.973214       1 controller.go:85] Starting OpenAPI V3 controller
I1220 02:05:10.973264       1 naming_controller.go:291] Starting NamingConditionController
I1220 02:05:10.973310       1 establishing_controller.go:76] Starting EstablishingController
I1220 02:05:10.973372       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I1220 02:05:10.973657       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I1220 02:05:10.973688       1 crd_finalizer.go:266] Starting CRDFinalizer
I1220 02:05:10.973803       1 available_controller.go:423] Starting AvailableConditionController
I1220 02:05:10.973871       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I1220 02:05:10.975746       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I1220 02:05:10.975986       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I1220 02:05:10.968885       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I1220 02:05:11.120776       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I1220 02:05:11.131581       1 shared_informer.go:318] Caches are synced for node_authorizer
I1220 02:05:11.169334       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1220 02:05:11.181128       1 shared_informer.go:318] Caches are synced for configmaps
I1220 02:05:11.181192       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I1220 02:05:11.181457       1 shared_informer.go:318] Caches are synced for crd-autoregister
I1220 02:05:11.182289       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:05:11.182457       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.182537       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.183192       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.183333       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:05:11.183568       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.183736       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.183795       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.183835       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.183872       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.183966       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.184077       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:05:11.184188       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.184227       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.184263       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.184293       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:05:11.184323       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.184372       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.184538       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.183224       1 apf_controller.go:377] Running API Priority and Fairness config worker
I1220 02:05:11.183234       1 aggregator.go:166] initial CRD sync complete...
I1220 02:05:11.185232       1 autoregister_controller.go:141] Starting autoregister controller
I1220 02:05:11.185240       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1220 02:05:11.185247       1 cache.go:39] Caches are synced for autoregister controller
I1220 02:05:11.185389       1 cache.go:39] Caches are synced for AvailableConditionController controller
I1220 02:05:11.185433       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.186718       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:05:11.186768       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:05:11.185441       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
E1220 02:05:11.213933       1 controller.go:193] "Failed to update lease" err="Operation cannot be fulfilled on leases.coordination.k8s.io \"apiserver-eqt674mfxb4j56mrjjkoe7b7ii\": StorageError: invalid object, Code: 4, Key: /registry/leases/kube-system/apiserver-eqt674mfxb4j56mrjjkoe7b7ii, ResourceVersion: 0, AdditionalErrorMsg: Precondition failed: UID in precondition: 56d314ec-57cb-49a4-8547-3abdeaea098b, UID in object meta: "
I1220 02:05:12.020240       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
W1220 02:05:12.712510       1 lease.go:263] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I1220 02:05:12.715419       1 controller.go:624] quota admission added evaluator for: endpoints
I1220 02:05:12.727041       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I1220 02:05:13.806063       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I1220 02:05:13.828846       1 controller.go:624] quota admission added evaluator for: deployments.apps
I1220 02:05:13.903762       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I1220 02:05:13.946549       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1220 02:05:13.960715       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1220 02:10:11.122336       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:10:11.123639       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:10:11.123760       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:10:11.123838       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:10:11.123895       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:10:11.123924       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:10:11.123944       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:10:11.123972       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:10:11.124000       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:10:11.124019       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:10:11.124084       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.120211       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:15:11.120319       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.120352       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.120714       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:15:11.120818       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:15:11.120840       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.120981       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:15:11.121013       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.121035       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:15:11.121060       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:15:11.121088       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:16:47.196202       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I1220 02:16:47.265756       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kubernetes-dashboard" clusterIPs={"IPv4":"10.105.238.157"}
I1220 02:20:11.215681       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:20:11.215853       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:20:11.215877       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:20:11.215907       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:20:11.215960       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:20:11.216069       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:20:11.216093       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:20:11.216277       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:20:11.216498       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:20:11.216537       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:20:11.216619       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:25:11.218373       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:25:11.218583       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:25:11.218705       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:25:11.218779       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:25:11.218855       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:25:11.218876       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:25:11.218937       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:25:11.218957       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:25:11.218978       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:25:11.219059       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:25:11.219083       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:30:11.216667       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:30:11.216882       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:30:11.216966       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:30:11.216988       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:30:11.217058       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:30:11.217468       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:30:11.217534       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:30:11.217716       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:30:11.217844       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:30:11.218036       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:30:11.218059       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:35:11.149523       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:35:11.149670       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:35:11.149717       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:35:11.149742       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:35:11.149811       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:35:11.149834       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:35:11.150044       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:35:11.150071       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:35:11.150118       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:35:11.150337       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:35:11.150411       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
E1220 02:36:17.952302       1 upgradeaware.go:425] Error proxying data from client to backend: write tcp 192.168.49.2:35880->192.168.49.2:10250: write: broken pipe
I1220 02:40:11.149089       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1 to ResourceManager
I1220 02:40:11.149196       1 handler.go:232] Adding GroupVersion enterprisesearch.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:40:11.149388       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1 to ResourceManager
I1220 02:40:11.149509       1 handler.go:232] Adding GroupVersion kibana.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:40:11.149541       1 handler.go:232] Adding GroupVersion agent.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:40:11.149561       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1 to ResourceManager
I1220 02:40:11.149584       1 handler.go:232] Adding GroupVersion apm.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:40:11.149664       1 handler.go:232] Adding GroupVersion beat.k8s.elastic.co v1beta1 to ResourceManager
I1220 02:40:11.149683       1 handler.go:232] Adding GroupVersion maps.k8s.elastic.co v1alpha1 to ResourceManager
I1220 02:40:11.149709       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1 to ResourceManager
I1220 02:40:11.149776       1 handler.go:232] Adding GroupVersion elasticsearch.k8s.elastic.co v1beta1 to ResourceManager
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-minikube ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
I1220 02:05:06.650761       1 serving.go:348] Generated self-signed cert in-memory
I1220 02:05:07.605256       1 controllermanager.go:189] "Starting" version="v1.28.3"
I1220 02:05:07.605343       1 controllermanager.go:191] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1220 02:05:07.611531       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I1220 02:05:07.611532       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I1220 02:05:07.613269       1 secure_serving.go:213] Serving securely on 127.0.0.1:10257
I1220 02:05:07.616526       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1220 02:05:13.147248       1 shared_informer.go:311] Waiting for caches to sync for tokens
I1220 02:05:13.154746       1 controllermanager.go:642] "Started controller" controller="cronjob-controller"
I1220 02:05:13.155019       1 cronjob_controllerv2.go:139] "Starting cronjob controller v2"
I1220 02:05:13.155033       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I1220 02:05:13.186853       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kubelet-serving"
I1220 02:05:13.186886       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I1220 02:05:13.186915       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I1220 02:05:13.188736       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kubelet-client"
I1220 02:05:13.188788       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I1220 02:05:13.188816       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I1220 02:05:13.191772       1 controllermanager.go:642] "Started controller" controller="certificatesigningrequest-signing-controller"
I1220 02:05:13.192854       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-legacy-unknown"
I1220 02:05:13.192880       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I1220 02:05:13.192895       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I1220 02:05:13.193286       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kube-apiserver-client"
I1220 02:05:13.193418       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I1220 02:05:13.193446       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I1220 02:05:13.198527       1 controllermanager.go:642] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I1220 02:05:13.198773       1 cleaner.go:83] "Starting CSR cleaner controller"
I1220 02:05:13.204794       1 controllermanager.go:642] "Started controller" controller="root-ca-certificate-publisher-controller"
I1220 02:05:13.205074       1 publisher.go:102] "Starting root CA cert publisher controller"
I1220 02:05:13.205089       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I1220 02:05:13.210743       1 controllermanager.go:642] "Started controller" controller="endpointslice-controller"
I1220 02:05:13.215813       1 controllermanager.go:642] "Started controller" controller="replicationcontroller-controller"
I1220 02:05:13.216215       1 replica_set.go:214] "Starting controller" name="replicationcontroller"
I1220 02:05:13.216241       1 shared_informer.go:311] Waiting for caches to sync for ReplicationController
I1220 02:05:13.221991       1 endpointslice_controller.go:264] "Starting endpoint slice controller"
I1220 02:05:13.222107       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice
I1220 02:05:13.224947       1 controllermanager.go:642] "Started controller" controller="replicaset-controller"
I1220 02:05:13.225228       1 replica_set.go:214] "Starting controller" name="replicaset"
I1220 02:05:13.225243       1 shared_informer.go:311] Waiting for caches to sync for ReplicaSet
I1220 02:05:13.238009       1 controllermanager.go:642] "Started controller" controller="disruption-controller"
I1220 02:05:13.243564       1 disruption.go:437] "Sending events to api server."
I1220 02:05:13.243658       1 disruption.go:448] "Starting disruption controller"
I1220 02:05:13.243669       1 shared_informer.go:311] Waiting for caches to sync for disruption
I1220 02:05:13.244485       1 controllermanager.go:642] "Started controller" controller="job-controller"
I1220 02:05:13.244851       1 job_controller.go:226] "Starting job controller"
I1220 02:05:13.245010       1 shared_informer.go:311] Waiting for caches to sync for job
I1220 02:05:13.247656       1 shared_informer.go:318] Caches are synced for tokens
I1220 02:05:13.254378       1 controllermanager.go:642] "Started controller" controller="statefulset-controller"
I1220 02:05:13.283145       1 stateful_set.go:161] "Starting stateful set controller"
I1220 02:05:13.283171       1 shared_informer.go:311] Waiting for caches to sync for stateful set
I1220 02:05:13.291622       1 controllermanager.go:642] "Started controller" controller="bootstrap-signer-controller"
I1220 02:05:13.291974       1 shared_informer.go:311] Waiting for caches to sync for bootstrap_signer
I1220 02:05:13.315349       1 controllermanager.go:642] "Started controller" controller="horizontal-pod-autoscaler-controller"
I1220 02:05:13.315677       1 horizontal.go:200] "Starting HPA controller"
I1220 02:05:13.315693       1 shared_informer.go:311] Waiting for caches to sync for HPA
I1220 02:05:13.319933       1 controllermanager.go:642] "Started controller" controller="ttl-controller"
I1220 02:05:13.320202       1 ttl_controller.go:124] "Starting TTL controller"
I1220 02:05:13.320217       1 shared_informer.go:311] Waiting for caches to sync for TTL
I1220 02:05:23.350891       1 range_allocator.go:111] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses"
I1220 02:05:23.351015       1 controllermanager.go:642] "Started controller" controller="node-ipam-controller"
I1220 02:05:23.351175       1 node_ipam_controller.go:162] "Starting ipam controller"
I1220 02:05:23.351272       1 shared_informer.go:311] Waiting for caches to sync for node
E1220 02:05:23.355492       1 core.go:92] "Failed to start service controller" err="WARNING: no cloud provider provided, services of type LoadBalancer will fail"
I1220 02:05:23.355577       1 controllermanager.go:620] "Warning: skipping controller" controller="service-lb-controller"
I1220 02:05:23.359526       1 controllermanager.go:642] "Started controller" controller="certificatesigningrequest-approving-controller"
I1220 02:05:23.359660       1 certificate_controller.go:115] "Starting certificate controller" name="csrapproving"
I1220 02:05:23.359680       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I1220 02:05:23.363049       1 controllermanager.go:642] "Started controller" controller="persistentvolume-protection-controller"
I1220 02:05:23.363925       1 pv_protection_controller.go:78] "Starting PV protection controller"
I1220 02:05:23.363994       1 shared_informer.go:311] Waiting for caches to sync for PV protection
I1220 02:05:23.375697       1 garbagecollector.go:155] "Starting controller" controller="garbagecollector"
I1220 02:05:23.375756       1 controllermanager.go:642] "Started controller" controller="garbage-collector-controller"
I1220 02:05:23.375791       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I1220 02:05:23.375896       1 graph_builder.go:294] "Running" component="GraphBuilder"
I1220 02:05:23.379553       1 controllermanager.go:642] "Started controller" controller="deployment-controller"
I1220 02:05:23.379757       1 deployment_controller.go:168] "Starting controller" controller="deployment"
I1220 02:05:23.379772       1 shared_informer.go:311] Waiting for caches to sync for deployment
I1220 02:05:23.383286       1 controllermanager.go:642] "Started controller" controller="token-cleaner-controller"
I1220 02:05:23.383538       1 tokencleaner.go:112] "Starting token cleaner controller"
I1220 02:05:23.383550       1 shared_informer.go:311] Waiting for caches to sync for token_cleaner
I1220 02:05:23.383557       1 shared_informer.go:318] Caches are synced for token_cleaner
I1220 02:05:23.386673       1 controllermanager.go:642] "Started controller" controller="persistentvolumeclaim-protection-controller"
I1220 02:05:23.386854       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I1220 02:05:23.386871       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I1220 02:05:23.390104       1 controllermanager.go:642] "Started controller" controller="ttl-after-finished-controller"
I1220 02:05:23.390291       1 ttlafterfinished_controller.go:109] "Starting TTL after finished controller"
I1220 02:05:23.390303       1 shared_informer.go:311] Waiting for caches to sync for TTL after finished
I1220 02:05:23.427539       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="jobs.batch"
I1220 02:05:23.431582       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="leases.coordination.k8s.io"
W1220 02:05:23.431724       1 shared_informer.go:593] resyncPeriod 18h30m42.304506072s is smaller than resyncCheckPeriod 23h45m26.097529124s and the informer has already started. Changing it to 23h45m26.097529124s
I1220 02:05:23.432090       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="serviceaccounts"
I1220 02:05:23.432238       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="deployments.apps"
I1220 02:05:23.432298       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="horizontalpodautoscalers.autoscaling"
I1220 02:05:23.432553       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="elasticsearches.elasticsearch.k8s.elastic.co"
I1220 02:05:23.432618       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="statefulsets.apps"
I1220 02:05:23.434123       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="roles.rbac.authorization.k8s.io"
I1220 02:05:23.434262       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="beats.beat.k8s.elastic.co"
I1220 02:05:23.434343       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="apmservers.apm.k8s.elastic.co"
W1220 02:05:23.434371       1 shared_informer.go:593] resyncPeriod 19h25m56.361524196s is smaller than resyncCheckPeriod 23h45m26.097529124s and the informer has already started. Changing it to 23h45m26.097529124s
I1220 02:05:23.434891       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="replicasets.apps"
I1220 02:05:23.435028       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="cronjobs.batch"
I1220 02:05:23.435127       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="endpointslices.discovery.k8s.io"
I1220 02:05:23.435219       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="endpoints"
I1220 02:05:23.435513       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="rolebindings.rbac.authorization.k8s.io"
I1220 02:05:23.435697       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="csistoragecapacities.storage.k8s.io"
I1220 02:05:23.435766       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="kibanas.kibana.k8s.elastic.co"
I1220 02:05:23.435849       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="podtemplates"
I1220 02:05:23.435980       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="controllerrevisions.apps"
I1220 02:05:23.436071       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="networkpolicies.networking.k8s.io"
I1220 02:05:23.436135       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="poddisruptionbudgets.policy"
I1220 02:05:23.436214       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="ingresses.networking.k8s.io"
I1220 02:05:23.436472       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="agents.agent.k8s.elastic.co"
I1220 02:05:23.436586       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="enterprisesearches.enterprisesearch.k8s.elastic.co"
I1220 02:05:23.436662       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="limitranges"
I1220 02:05:23.436804       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="daemonsets.apps"
I1220 02:05:23.436895       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="elasticmapsservers.maps.k8s.elastic.co"
I1220 02:05:23.436982       1 controllermanager.go:642] "Started controller" controller="resourcequota-controller"
I1220 02:05:23.437106       1 resource_quota_controller.go:294] "Starting resource quota controller"
I1220 02:05:23.437126       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I1220 02:05:23.437174       1 resource_quota_monitor.go:305] "QuotaMonitor running"
I1220 02:05:23.443105       1 controllermanager.go:642] "Started controller" controller="daemonset-controller"
I1220 02:05:23.444600       1 daemon_controller.go:291] "Starting daemon sets controller"
I1220 02:05:23.444895       1 shared_informer.go:311] Waiting for caches to sync for daemon sets
I1220 02:05:23.448406       1 controllermanager.go:642] "Started controller" controller="persistentvolume-binder-controller"
I1220 02:05:23.448684       1 pv_controller_base.go:319] "Starting persistent volume controller"
I1220 02:05:23.448697       1 shared_informer.go:311] Waiting for caches to sync for persistent volume
I1220 02:05:23.453768       1 controllermanager.go:642] "Started controller" controller="persistentvolume-attach-detach-controller"
I1220 02:05:23.453872       1 attach_detach_controller.go:337] "Starting attach detach controller"
I1220 02:05:23.453885       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I1220 02:05:23.457812       1 controllermanager.go:642] "Started controller" controller="endpoints-controller"
I1220 02:05:23.458485       1 endpoints_controller.go:174] "Starting endpoint controller"
I1220 02:05:23.458553       1 shared_informer.go:311] Waiting for caches to sync for endpoint
I1220 02:05:23.485335       1 controllermanager.go:642] "Started controller" controller="namespace-controller"
I1220 02:05:23.485866       1 namespace_controller.go:197] "Starting namespace controller"
I1220 02:05:23.486019       1 shared_informer.go:311] Waiting for caches to sync for namespace
I1220 02:05:23.490599       1 controllermanager.go:642] "Started controller" controller="serviceaccount-controller"
I1220 02:05:23.490697       1 serviceaccounts_controller.go:111] "Starting service account controller"
I1220 02:05:23.490721       1 shared_informer.go:311] Waiting for caches to sync for service account
I1220 02:05:23.496760       1 controllermanager.go:642] "Started controller" controller="persistentvolume-expander-controller"
I1220 02:05:23.496807       1 expand_controller.go:328] "Starting expand controller"
I1220 02:05:23.496829       1 shared_informer.go:311] Waiting for caches to sync for expand
E1220 02:05:23.503584       1 core.go:213] "Failed to start cloud node lifecycle controller" err="no cloud provider provided"
I1220 02:05:23.503753       1 controllermanager.go:620] "Warning: skipping controller" controller="cloud-node-lifecycle-controller"
I1220 02:05:23.510749       1 controllermanager.go:642] "Started controller" controller="clusterrole-aggregation-controller"
I1220 02:05:23.511197       1 clusterroleaggregation_controller.go:189] "Starting ClusterRoleAggregator controller"
I1220 02:05:23.511432       1 shared_informer.go:311] Waiting for caches to sync for ClusterRoleAggregator
I1220 02:05:23.517806       1 controllermanager.go:642] "Started controller" controller="ephemeral-volume-controller"
I1220 02:05:23.517876       1 controller.go:169] "Starting ephemeral volume controller"
I1220 02:05:23.517984       1 shared_informer.go:311] Waiting for caches to sync for ephemeral
I1220 02:05:23.523365       1 controllermanager.go:642] "Started controller" controller="endpointslice-mirroring-controller"
I1220 02:05:23.524196       1 endpointslicemirroring_controller.go:223] "Starting EndpointSliceMirroring controller"
I1220 02:05:23.524218       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice_mirroring
I1220 02:05:23.528231       1 controllermanager.go:642] "Started controller" controller="pod-garbage-collector-controller"
I1220 02:05:23.528564       1 gc_controller.go:103] "Starting GC controller"
I1220 02:05:23.528580       1 shared_informer.go:311] Waiting for caches to sync for GC
I1220 02:05:23.533199       1 node_lifecycle_controller.go:431] "Controller will reconcile labels"
I1220 02:05:23.533343       1 controllermanager.go:642] "Started controller" controller="node-lifecycle-controller"
I1220 02:05:23.533369       1 core.go:228] "Warning: configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes."
I1220 02:05:23.533380       1 controllermanager.go:620] "Warning: skipping controller" controller="node-route-controller"
I1220 02:05:23.533811       1 node_lifecycle_controller.go:465] "Sending events to api server"
I1220 02:05:23.533909       1 node_lifecycle_controller.go:476] "Starting node controller"
I1220 02:05:23.533922       1 shared_informer.go:311] Waiting for caches to sync for taint
I1220 02:05:23.551477       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I1220 02:05:23.556632       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I1220 02:05:23.580759       1 shared_informer.go:318] Caches are synced for deployment
I1220 02:05:23.590001       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I1220 02:05:23.594011       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I1220 02:05:23.594707       1 shared_informer.go:318] Caches are synced for service account
I1220 02:05:23.594014       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I1220 02:05:23.598873       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I1220 02:05:23.598985       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I1220 02:05:23.599251       1 shared_informer.go:318] Caches are synced for TTL after finished
I1220 02:05:23.599963       1 shared_informer.go:318] Caches are synced for namespace
I1220 02:05:23.603912       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I1220 02:05:23.607719       1 shared_informer.go:318] Caches are synced for crt configmap
I1220 02:05:23.615772       1 shared_informer.go:318] Caches are synced for HPA
I1220 02:05:23.620534       1 shared_informer.go:318] Caches are synced for TTL
I1220 02:05:23.620771       1 shared_informer.go:318] Caches are synced for ReplicationController
I1220 02:05:23.622404       1 shared_informer.go:318] Caches are synced for endpoint_slice
I1220 02:05:23.626551       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I1220 02:05:23.626620       1 shared_informer.go:318] Caches are synced for ReplicaSet
I1220 02:05:23.627035       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="153.639µs"
I1220 02:05:23.627043       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-5dd5756b68" duration="165.715µs"
I1220 02:05:23.628728       1 shared_informer.go:318] Caches are synced for GC
I1220 02:05:23.634273       1 shared_informer.go:318] Caches are synced for taint
I1220 02:05:23.634481       1 node_lifecycle_controller.go:1225] "Initializing eviction metric for zone" zone=""
I1220 02:05:23.634844       1 node_lifecycle_controller.go:877] "Missing timestamp for Node. Assuming now as a timestamp" node="minikube"
I1220 02:05:23.635105       1 node_lifecycle_controller.go:1071] "Controller detected that zone is now in new state" zone="" newState="Normal"
I1220 02:05:23.635150       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I1220 02:05:23.635280       1 taint_manager.go:211] "Sending events to api server"
I1220 02:05:23.637059       1 event.go:307] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I1220 02:05:23.644945       1 shared_informer.go:318] Caches are synced for disruption
I1220 02:05:23.645101       1 shared_informer.go:318] Caches are synced for job
I1220 02:05:23.645179       1 shared_informer.go:318] Caches are synced for daemon sets
I1220 02:05:23.652565       1 shared_informer.go:318] Caches are synced for node
I1220 02:05:23.652638       1 range_allocator.go:174] "Sending events to api server"
I1220 02:05:23.652670       1 range_allocator.go:178] "Starting range CIDR allocator"
I1220 02:05:23.652677       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I1220 02:05:23.652685       1 shared_informer.go:318] Caches are synced for cidrallocator
I1220 02:05:23.655427       1 shared_informer.go:318] Caches are synced for cronjob
I1220 02:05:23.658919       1 shared_informer.go:318] Caches are synced for endpoint
I1220 02:05:23.660612       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I1220 02:05:23.665169       1 shared_informer.go:318] Caches are synced for PV protection
I1220 02:05:23.719582       1 shared_informer.go:318] Caches are synced for ephemeral
I1220 02:05:23.748793       1 shared_informer.go:318] Caches are synced for persistent volume
I1220 02:05:23.781136       1 shared_informer.go:318] Caches are synced for attach detach
I1220 02:05:23.783336       1 shared_informer.go:318] Caches are synced for stateful set
I1220 02:05:23.787819       1 shared_informer.go:318] Caches are synced for PVC protection
I1220 02:05:23.797472       1 shared_informer.go:318] Caches are synced for expand
I1220 02:05:23.811816       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I1220 02:05:23.901722       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="274.644853ms"
I1220 02:05:23.901886       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="65.743µs"
I1220 02:05:24.052003       1 shared_informer.go:318] Caches are synced for resource quota
I1220 02:05:24.137591       1 shared_informer.go:318] Caches are synced for resource quota
I1220 02:05:24.177076       1 shared_informer.go:318] Caches are synced for garbage collector
I1220 02:05:24.177244       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I1220 02:05:24.204931       1 shared_informer.go:318] Caches are synced for garbage collector
I1220 02:05:32.593852       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="7.906664ms"
I1220 02:05:32.594188       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="63.042µs"
I1220 02:16:47.205540       1 event.go:307] "Event occurred" object="kube-system/kubernetes-dashboard" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set kubernetes-dashboard-55c4b68877 to 1"
I1220 02:16:47.218383       1 event.go:307] "Event occurred" object="kube-system/kubernetes-dashboard-55c4b68877" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kubernetes-dashboard-55c4b68877-8lvns"
I1220 02:16:47.252624       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="48.738062ms"
I1220 02:16:47.282290       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="29.561152ms"
I1220 02:16:47.282766       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="252.554µs"
I1220 02:17:31.474700       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="6.397154ms"
I1220 02:17:31.475082       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="69.386µs"
I1220 02:25:38.894350       1 event.go:307] "Event occurred" object="default/influxdb-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set influxdb-deployment-6c4f6fbbdb to 1"
I1220 02:25:38.902622       1 event.go:307] "Event occurred" object="default/influxdb-deployment-6c4f6fbbdb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: influxdb-deployment-6c4f6fbbdb-8tqbc"
I1220 02:25:38.910803       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="16.774736ms"
I1220 02:25:38.920602       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="9.728006ms"
I1220 02:25:38.920742       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="48.67µs"
I1220 02:25:38.927062       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="125.439µs"
I1220 02:27:42.505295       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="58.728µs"
I1220 02:27:54.085606       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="63.061µs"
I1220 02:29:13.677748       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="12.226675ms"
I1220 02:29:13.677979       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="76.021µs"
I1220 02:40:12.502053       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/kubernetes-dashboard-55c4b68877" duration="6.877µs"
I1220 02:40:18.953736       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/influxdb-deployment-6c4f6fbbdb" duration="18.525µs"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-minikube ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-2s2mn ====
I1220 02:05:14.022606       1 server_others.go:69] "Using iptables proxy"
I1220 02:05:14.078879       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I1220 02:05:14.285549       1 server.go:632] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I1220 02:05:14.292656       1 server_others.go:152] "Using iptables Proxier"
I1220 02:05:14.292773       1 server_others.go:421] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I1220 02:05:14.292794       1 server_others.go:438] "Defaulting to no-op detect-local"
I1220 02:05:14.293002       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1220 02:05:14.293731       1 server.go:846] "Version info" version="v1.28.3"
I1220 02:05:14.294037       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1220 02:05:14.297973       1 config.go:188] "Starting service config controller"
I1220 02:05:14.298751       1 config.go:97] "Starting endpoint slice config controller"
I1220 02:05:14.303176       1 shared_informer.go:311] Waiting for caches to sync for service config
I1220 02:05:14.303405       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1220 02:05:14.298774       1 config.go:315] "Starting node config controller"
I1220 02:05:14.304014       1 shared_informer.go:311] Waiting for caches to sync for node config
I1220 02:05:14.405033       1 shared_informer.go:318] Caches are synced for node config
I1220 02:05:14.405292       1 shared_informer.go:318] Caches are synced for service config
I1220 02:05:14.405352       1 shared_informer.go:318] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-2s2mn ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
I1220 02:05:06.057247       1 serving.go:348] Generated self-signed cert in-memory
W1220 02:05:11.112285       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W1220 02:05:11.112474       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W1220 02:05:11.112498       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W1220 02:05:11.112511       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I1220 02:05:11.155437       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.28.3"
I1220 02:05:11.155537       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1220 02:05:11.159804       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1220 02:05:11.160915       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I1220 02:05:11.161489       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1220 02:05:11.161502       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1220 02:05:11.262335       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-minikube ====
==== START logs for container storage-provisioner of pod kube-system/storage-provisioner ====
I1220 02:05:30.109530       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I1220 02:05:30.125486       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I1220 02:05:30.126179       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I1220 02:05:47.527300       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I1220 02:05:47.527354       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"63f0fdf6-9415-44e2-8e19-06d6336b7481", APIVersion:"v1", ResourceVersion:"228765", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_5bf9672a-e643-4b6e-bda7-aa30e4cda2c6 became leader
I1220 02:05:47.527589       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_5bf9672a-e643-4b6e-bda7-aa30e4cda2c6!
I1220 02:05:47.628460       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_5bf9672a-e643-4b6e-bda7-aa30e4cda2c6!
==== END logs for container storage-provisioner of pod kube-system/storage-provisioner ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": [
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a26912e17c5a70",
                "namespace": "default",
                "uid": "ccae7475-7b42-4242-9665-1d07c1cf0293",
                "resourceVersion": "230941",
                "creationTimestamp": "2023-12-20T02:25:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230935"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/influxdb-deployment-6c4f6fbbdb-8tqbc to minikube",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-20T02:25:38.912810Z",
            "action": "Binding",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a2691304793549",
                "namespace": "default",
                "uid": "38c0cb16-8a44-4529-ac8e-1beb304ddcc7",
                "resourceVersion": "231193",
                "creationTimestamp": "2023-12-20T02:25:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"influxdb:latest\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:25:39Z",
            "lastTimestamp": "2023-12-20T02:27:54Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a2692f7faf9a24",
                "namespace": "default",
                "uid": "fab0bd62-782a-48b2-9f9a-9a1b5a6ab460",
                "resourceVersion": "231165",
                "creationTimestamp": "2023-12-20T02:27:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Failed",
            "message": "Failed to pull image \"influxdb:latest\": rpc error: code = Canceled desc = context canceled",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:27:41Z",
            "lastTimestamp": "2023-12-20T02:27:41Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a2692f7fafe1c3",
                "namespace": "default",
                "uid": "6de4a43b-15b2-46c2-a76b-b52e7975b99b",
                "resourceVersion": "231166",
                "creationTimestamp": "2023-12-20T02:27:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Failed",
            "message": "Error: ErrImagePull",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:27:41Z",
            "lastTimestamp": "2023-12-20T02:27:41Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a2692fa789ccb9",
                "namespace": "default",
                "uid": "c612b793-303e-4e93-9c2c-1b64914944a4",
                "resourceVersion": "231169",
                "creationTimestamp": "2023-12-20T02:27:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "BackOff",
            "message": "Back-off pulling image \"influxdb:latest\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:27:42Z",
            "lastTimestamp": "2023-12-20T02:27:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a2692fa789fa95",
                "namespace": "default",
                "uid": "64f33ba6-02c9-4d53-b1fc-09790178a556",
                "resourceVersion": "231171",
                "creationTimestamp": "2023-12-20T02:27:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Failed",
            "message": "Error: ImagePullBackOff",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:27:42Z",
            "lastTimestamp": "2023-12-20T02:27:42Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a26944b9306983",
                "namespace": "default",
                "uid": "7b3eca63-e357-4967-9d13-025117c71f78",
                "resourceVersion": "231336",
                "creationTimestamp": "2023-12-20T02:29:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"influxdb:latest\" in 1m18.91s (1m18.91s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:29:12Z",
            "lastTimestamp": "2023-12-20T02:29:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a26944d9312ea3",
                "namespace": "default",
                "uid": "cf7df967-1781-4f2a-9ae3-5c86e409dd94",
                "resourceVersion": "231339",
                "creationTimestamp": "2023-12-20T02:29:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Created",
            "message": "Created container influxdb",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:29:13Z",
            "lastTimestamp": "2023-12-20T02:29:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a26944de8cab85",
                "namespace": "default",
                "uid": "21e231af-4de9-4040-9271-e456c4cae5cb",
                "resourceVersion": "231340",
                "creationTimestamp": "2023-12-20T02:29:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Started",
            "message": "Started container influxdb",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:29:13Z",
            "lastTimestamp": "2023-12-20T02:29:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc.17a269dfc89dc7d7",
                "namespace": "default",
                "uid": "db275efb-1b5a-4cc0-91b4-b077419aaaa6",
                "resourceVersion": "232594",
                "creationTimestamp": "2023-12-20T02:40:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb-8tqbc",
                "uid": "4f1587bf-6c99-46f7-82c5-c61a68b6a597",
                "apiVersion": "v1",
                "resourceVersion": "230938",
                "fieldPath": "spec.containers{influxdb}"
            },
            "reason": "Killing",
            "message": "Stopping container influxdb",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:40:18Z",
            "lastTimestamp": "2023-12-20T02:40:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "influxdb-deployment-6c4f6fbbdb.17a26912e0db96cc",
                "namespace": "default",
                "uid": "4045fe15-982f-4ebf-82af-2e9eedeab358",
                "resourceVersion": "230936",
                "creationTimestamp": "2023-12-20T02:25:38Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "influxdb-deployment-6c4f6fbbdb",
                "uid": "9dfd9a89-d981-4985-a383-fd3c2476f5e9",
                "apiVersion": "apps/v1",
                "resourceVersion": "230932"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: influxdb-deployment-6c4f6fbbdb-8tqbc",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-12-20T02:25:38Z",
            "lastTimestamp": "2023-12-20T02:25:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "influxdb-deployment.17a26912e05ec95e",
                "namespace": "default",
                "uid": "83aac454-f142-4895-8ad6-3356f290a791",
                "resourceVersion": "230934",
                "creationTimestamp": "2023-12-20T02:25:38Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "influxdb-deployment",
                "uid": "28182c09-797d-468f-b78a-99eab6920ed0",
                "apiVersion": "apps/v1",
                "resourceVersion": "230931"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set influxdb-deployment-6c4f6fbbdb to 1",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-12-20T02:25:38Z",
            "lastTimestamp": "2023-12-20T02:25:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "minikube.17a267f31bb8df1b",
                "namespace": "default",
                "uid": "fbcff719-1504-40bc-854a-dc7c7f846c57",
                "resourceVersion": "228602",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:02Z",
            "lastTimestamp": "2023-12-20T02:05:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f31fedadc4",
                "namespace": "default",
                "uid": "70a9b64b-4fae-48dc-8766-3f1ccf79ebab",
                "resourceVersion": "228629",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node minikube status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f31fedde22",
                "namespace": "default",
                "uid": "a87332f3-e626-4e20-8b72-165992d4d36f",
                "resourceVersion": "228630",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node minikube status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f31fede8dc",
                "namespace": "default",
                "uid": "5bc88028-b32b-414c-ae4c-c8ef63381373",
                "resourceVersion": "228628",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node minikube status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f322f5f28c",
                "namespace": "default",
                "uid": "77640f17-054f-43d2-87c3-e5af8e57a663",
                "resourceVersion": "228606",
                "creationTimestamp": "2023-12-20T02:05:11Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:05:03Z",
            "lastTimestamp": "2023-12-20T02:05:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f5c0cc7e3d",
                "namespace": "default",
                "uid": "c3a13a6f-5210-409e-8946-499823420021",
                "resourceVersion": "228689",
                "creationTimestamp": "2023-12-20T02:05:14Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "minikube"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-20T02:05:14.298742Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-minikube"
        },
        {
            "metadata": {
                "name": "minikube.17a267f7ed3fa9a7",
                "namespace": "default",
                "uid": "088f87aa-cd23-45c2-b964-ea9c09ed70c6",
                "resourceVersion": "228717",
                "creationTimestamp": "2023-12-20T02:05:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "minikube",
                "uid": "508f609b-9286-4091-a9b0-755be82006f5",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node minikube event: Registered Node minikube in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-12-20T02:05:23Z",
            "lastTimestamp": "2023-12-20T02:05:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "redis.17a2697976555414",
                "namespace": "default",
                "uid": "cad53091-0528-44a7-a02f-83055ae24068",
                "resourceVersion": "231751",
                "creationTimestamp": "2023-12-20T02:32:59Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231749"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/redis to minikube",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-20T02:32:59.496720Z",
            "action": "Binding",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-minikube"
        },
        {
            "metadata": {
                "name": "redis.17a26979840eb8b8",
                "namespace": "default",
                "uid": "cbb911c6-0a08-4951-a242-9797f3876443",
                "resourceVersion": "231813",
                "creationTimestamp": "2023-12-20T02:32:59Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"config\" : configmap \"example-redis-config\" not found",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:32:59Z",
            "lastTimestamp": "2023-12-20T02:33:31Z",
            "count": 7,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269889054487a",
                "namespace": "default",
                "uid": "b61f3dca-a268-4044-a959-92190a817e4c",
                "resourceVersion": "231876",
                "creationTimestamp": "2023-12-20T02:34:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"redis:5.0.4\"",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:34:04Z",
            "lastTimestamp": "2023-12-20T02:34:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a2698f0337f2a3",
                "namespace": "default",
                "uid": "8b353a36-2bbf-4666-88a2-1defdc667a16",
                "resourceVersion": "231925",
                "creationTimestamp": "2023-12-20T02:34:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"redis:5.0.4\" in 27.697s (27.697s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:34:32Z",
            "lastTimestamp": "2023-12-20T02:34:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a2698f14eda77a",
                "namespace": "default",
                "uid": "deed5f50-256e-4173-877f-74b401df19ca",
                "resourceVersion": "231928",
                "creationTimestamp": "2023-12-20T02:34:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Created",
            "message": "Created container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:34:32Z",
            "lastTimestamp": "2023-12-20T02:34:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a2698f1e18e1a0",
                "namespace": "default",
                "uid": "0864af04-ccf1-4b06-bd9a-29ab090306e0",
                "resourceVersion": "231929",
                "creationTimestamp": "2023-12-20T02:34:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Started",
            "message": "Started container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:34:32Z",
            "lastTimestamp": "2023-12-20T02:34:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269b670dac4b9",
                "namespace": "default",
                "uid": "a91c8bc9-0be5-4a42-999e-161e82e69404",
                "resourceVersion": "232235",
                "creationTimestamp": "2023-12-20T02:37:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "3cd898d7-96b3-40e9-9e6f-60b5b71d09d5",
                "apiVersion": "v1",
                "resourceVersion": "231750",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Killing",
            "message": "Stopping container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:37:21Z",
            "lastTimestamp": "2023-12-20T02:37:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269b911383662",
                "namespace": "default",
                "uid": "7f25b004-878c-48a9-b2e1-9e14499c8584",
                "resourceVersion": "232264",
                "creationTimestamp": "2023-12-20T02:37:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "fc1ce2a2-dff2-45e3-8eea-44636fe6cc17",
                "apiVersion": "v1",
                "resourceVersion": "232262"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/redis to minikube",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-12-20T02:37:32.678223Z",
            "action": "Binding",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269b94242a027",
                "namespace": "default",
                "uid": "df53dd4b-6fac-46a8-8ea5-03381024565f",
                "resourceVersion": "232267",
                "creationTimestamp": "2023-12-20T02:37:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "fc1ce2a2-dff2-45e3-8eea-44636fe6cc17",
                "apiVersion": "v1",
                "resourceVersion": "232263",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Pulled",
            "message": "Container image \"redis:5.0.4\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:37:33Z",
            "lastTimestamp": "2023-12-20T02:37:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269b94564084e",
                "namespace": "default",
                "uid": "72148392-2ede-4780-a3d7-298f8ffe3a95",
                "resourceVersion": "232268",
                "creationTimestamp": "2023-12-20T02:37:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "fc1ce2a2-dff2-45e3-8eea-44636fe6cc17",
                "apiVersion": "v1",
                "resourceVersion": "232263",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Created",
            "message": "Created container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:37:33Z",
            "lastTimestamp": "2023-12-20T02:37:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269b94a28c6f2",
                "namespace": "default",
                "uid": "7029c645-624b-45b1-8d1a-19a5eaeb1abb",
                "resourceVersion": "232269",
                "creationTimestamp": "2023-12-20T02:37:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "fc1ce2a2-dff2-45e3-8eea-44636fe6cc17",
                "apiVersion": "v1",
                "resourceVersion": "232263",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Started",
            "message": "Started container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:37:33Z",
            "lastTimestamp": "2023-12-20T02:37:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        },
        {
            "metadata": {
                "name": "redis.17a269d0cbf1b99f",
                "namespace": "default",
                "uid": "cba353aa-3d23-4b52-a936-f7219ee4c593",
                "resourceVersion": "232452",
                "creationTimestamp": "2023-12-20T02:39:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "redis",
                "uid": "fc1ce2a2-dff2-45e3-8eea-44636fe6cc17",
                "apiVersion": "v1",
                "resourceVersion": "232263",
                "fieldPath": "spec.containers{redis}"
            },
            "reason": "Killing",
            "message": "Stopping container redis",
            "source": {
                "component": "kubelet",
                "host": "minikube"
            },
            "firstTimestamp": "2023-12-20T02:39:14Z",
            "lastTimestamp": "2023-12-20T02:39:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "minikube"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "27e09a5e-8711-42e4-974b-45dd2293f40f",
                "resourceVersion": "194",
                "creationTimestamp": "2023-11-29T23:32:46Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "232698"
    },
    "items": []
}
